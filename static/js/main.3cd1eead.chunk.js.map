{"version":3,"sources":["Form/form.module.css","ContactsList/contacts.module.css","app.module.css","Filter/filter.module.css","transitions/apear.module.css","transitions/itemSlide.module.css","transitions/slide.module.css","transitions/slideright.module.css","Form/Form1.js","Filter/Filter.js","ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","Form1","state","name","number","handlerSubmit","e","preventDefault","newUser","id","uuid","props","contacts","find","contact","setAlarm","setState","prev","addNewUser","handlerOnChange","target","value","this","className","styles","list","onSubmit","listItemLable","listItem","type","onChange","btnSubmit","Component","Filter","filter","CSSTransition","in","length","timeout","classNames","filterTransition","unmountOnExit","filterBlock","filterInput","ContactsList","deleteContact","filteredContacts","toUpperCase","includes","TransitionGroup","component","map","key","itemTransition","btnDelete","data-id","onClick","App","isShow","isAlarm","delContact","dataset","hideAlarm","prevContacts","localStorage","getItem","JSON","parse","error","console","prevProps","prevState","setItem","stringify","header","slideTransition","title","alarmTransition","alarm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cd1eead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"form_list__2Wfx7\",\"listItemLable\":\"form_listItemLable__11LyW\",\"listItem\":\"form_listItem__2nvlb\",\"btnSubmit\":\"form_btnSubmit__1Kybr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__2tbre\",\"listItem\":\"contacts_listItem__23Niw\",\"btnDelete\":\"contacts_btnDelete__1SZzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app_header__AtqD4\",\"title\":\"app_title__1fnjs\",\"alarm\":\"app_alarm__bMl2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBlock\":\"filter_filterBlock__3tXYI\",\"filterInput\":\"filter_filterInput__2f8nU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"apear_enter__1L8qb\",\"enterActive\":\"apear_enterActive__1b0A5\",\"exit\":\"apear_exit__jo89Q\",\"exitActive\":\"apear_exitActive__2zeme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"itemSlide_enter__2p8zx\",\"enterActive\":\"itemSlide_enterActive__1m2Lm\",\"exit\":\"itemSlide_exit__3Q5Aj\",\"exitActive\":\"itemSlide_exitActive__1-zoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3iHz5\",\"enterActive\":\"slide_enterActive__1e7Zf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideright_enter__jGcj9\",\"enterActive\":\"slideright_enterActive__3ZtK1\",\"exit\":\"slideright_exit__1ieBF\",\"exitActive\":\"slideright_exitActive__14SUy\"};","import React, { Component } from 'react';\r\nimport { uuid } from 'uuidv4';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nexport class Form1 extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handlerSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newUser = { id: uuid(), name, number };\r\n\r\n    const isName = this.props.contacts.find(contact => name === contact.name);\r\n    if (isName) {\r\n      this.props.setAlarm();\r\n      this.setState(prev => ({\r\n        name: '',\r\n        number: '',\r\n      }));\r\n      return;\r\n    }\r\n    this.props.addNewUser(newUser);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handlerOnChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.list} onSubmit={this.handlerSubmit}>\r\n          <label className={styles.listItemLable}>\r\n            Name\r\n            <input\r\n              className={styles.listItem}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handlerOnChange}\r\n            />\r\n          </label>\r\n          <label className={styles.listItemLable}>\r\n            Number\r\n            <input\r\n              className={styles.listItem}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handlerOnChange}\r\n            />\r\n          </label>\r\n          <button className={styles.btnSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nForm1.propTypes = {\r\n  addNewUser: PropTypes.func.isRequired,\r\n  setAlarm: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport filterTransition from '../transitions/apear.module.css';\r\n\r\nfunction Filter({ contacts, filter, handlerOnChange }) {\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length > 1}\r\n      timeout={250}\r\n      classNames={filterTransition}\r\n      unmountOnExit>\r\n      <div className={styles.filterBlock}>\r\n        <label>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.filterInput}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handlerOnChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  handlerOnChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contacts.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport itemTransition from '../transitions/itemSlide.module.css';\r\n\r\nfunction ContactsList({ filter, contacts, deleteContact }) {\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toUpperCase().includes(filter.toUpperCase()),\r\n  );\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {filteredContacts.map(contact => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={itemTransition}>\r\n          <li className={styles.listItem}>\r\n            <span>{contact.name}: </span>\r\n            <span>{contact.number}</span>\r\n            <button\r\n              className={styles.btnDelete}\r\n              type=\"button\"\r\n              data-id={contact.id}\r\n              onClick={deleteContact}>\r\n              &#9587;\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n    // )\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\nimport { Form1 } from './Form/Form1';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './app.module.css';\nimport slideTransition from './transitions/slide.module.css';\n// import alarmTransition from './transitions/apear.module.css';\nimport alarmTransition from './transitions/slideright.module.css';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    isShow: false,\n    isAlarm: false,\n  };\n\n  componentDidMount() {\n    this.setState({ isShow: true });\n    const prevContacts = localStorage.getItem('contacts');\n    if (prevContacts) {\n      try {\n        const contacts = JSON.parse(prevContacts);\n        this.setState({ contacts });\n      } catch (error) {\n        console.error('Error = ', error);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewUser = newUser => {\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newUser],\n    }));\n  };\n\n  handlerOnChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  deleteContact = e => {\n    const delContact = this.state.contacts.filter(\n      contact => contact.id !== e.target.dataset.id,\n    );\n    this.setState({\n      contacts: [...delContact],\n    });\n  };\n\n  setAlarm = () => {\n    this.setState({ isAlarm: true });\n  };\n  hideAlarm = () => {\n    this.setState({ isAlarm: false });\n  };\n\n  render() {\n    const { filter, contacts, isShow, isAlarm } = this.state;\n    return (\n      <>\n        <div className={styles.header}>\n          <CSSTransition\n            in={isShow}\n            timeout={500}\n            classNames={slideTransition}\n            unmountOnExit>\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <CSSTransition\n            in={isAlarm}\n            timeout={250}\n            classNames={alarmTransition}\n            unmountOnExit>\n            <div onClick={this.hideAlarm} className={styles.alarm}>\n              Contact already exist!\n            </div>\n          </CSSTransition>\n        </div>\n        <Form1\n          contacts={contacts}\n          addNewUser={this.addNewUser}\n          setAlarm={this.setAlarm}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          contacts={contacts}\n          handlerOnChange={this.handlerOnChange}\n        />\n        <ContactsList\n          filter={filter}\n          contacts={contacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}